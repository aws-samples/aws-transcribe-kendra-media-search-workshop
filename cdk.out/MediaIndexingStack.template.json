{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "Using AWSLambdaBasicExecutionRole is acceptable for this use case",
     "id": "AwsSolutions-IAM4"
    },
    {
     "reason": "Specific permissions are used where possible, wildcards are minimized",
     "id": "AwsSolutions-IAM5"
    },
    {
     "reason": "Access logs bucket is not required.",
     "id": "AwsSolutions-S1"
    }
   ]
  }
 },
 "Resources": {
  "transcriptionbucketAC02861E": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcription_bucket/Resource"
   }
  },
  "transcriptionbucketPolicyDBEADC41": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "transcriptionbucketAC02861E"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "transcriptionbucketAC02861E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcription_bucket/Policy/Resource"
   }
  },
  "transcriberole818A8723": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "transcribe.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcribe_role/Resource"
   }
  },
  "transcriberoleDefaultPolicy9E617A51": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/media/AWS_Podcast_Episode_432.mp3"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/media/How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_.mp4"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcribe_job_output/.write_access_check_file.temp"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcribe_job_output/AWS_Podcast_Episode_432.json"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcribe_job_output/How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_.json"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "transcriberoleDefaultPolicy9E617A51",
    "Roles": [
     {
      "Ref": "transcriberole818A8723"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcribe_role/DefaultPolicy/Resource"
   }
  },
  "s3crawlfnServiceRole370A9FD8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/s3_crawl_fn/ServiceRole/Resource"
   }
  },
  "s3crawlfnServiceRoleDefaultPolicy951F6C18": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "transcribe:StartTranscriptionJob",
       "Condition": {
        "ArnEquals": {
         "aws:PrincipalArn": {
          "Fn::GetAtt": [
           "s3crawlfnServiceRole370A9FD8",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:transcribe:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":transcription-job/workshop_AWS_Podcast_Episode_432"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:transcribe:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":transcription-job/workshop_How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_"
          ]
         ]
        }
       ]
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "transcriberole818A8723",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "s3crawlfnServiceRoleDefaultPolicy951F6C18",
    "Roles": [
     {
      "Ref": "s3crawlfnServiceRole370A9FD8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/s3_crawl_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "s3crawlfn375C903F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ba16f54daccc6132ee13ed6c2cce78248548cc7915c38234ca13beedac6d174.zip"
    },
    "Environment": {
     "Variables": {
      "TRANSCRIPTION_BUCKET": {
       "Ref": "transcriptionbucketAC02861E"
      },
      "TRANSCRIPTION_OUTPUT_PREFIX": "transcribe_job_output",
      "TRANSCRIBE_ROLE": {
       "Fn::GetAtt": [
        "transcriberole818A8723",
        "Arn"
       ]
      }
     }
    },
    "Handler": "s3_crawl_fn.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "s3crawlfnServiceRole370A9FD8",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 45
   },
   "DependsOn": [
    "s3crawlfnServiceRoleDefaultPolicy951F6C18",
    "s3crawlfnServiceRole370A9FD8"
   ],
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/s3_crawl_fn/Resource",
    "aws:asset:path": "asset.7ba16f54daccc6132ee13ed6c2cce78248548cc7915c38234ca13beedac6d174",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "transcribeprocessfnServiceRole14F99ED5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcribe_process_fn/ServiceRole/Resource"
   }
  },
  "transcribeprocessfnServiceRoleDefaultPolicy577B80D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "transcribe:GetTranscriptionJob",
       "Condition": {
        "ArnEquals": {
         "aws:PrincipalArn": {
          "Fn::GetAtt": [
           "transcribeprocessfnServiceRole14F99ED5",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:transcribe:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":transcription-job/workshop_AWS_Podcast_Episode_432"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:transcribe:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":transcription-job/workshop_How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcribe_job_output/AWS_Podcast_Episode_432.json"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcribe_job_output/How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_.json"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcriptions/AWS_Podcast_Episode_432.txt"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcriptions/AWS_Podcast_Episode_432.txt.metadata.json"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcriptions/How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_.txt"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transcriptionbucketAC02861E",
             "Arn"
            ]
           },
           "/transcriptions/How_can_I_log_into_my_Amazon_EC2_instance_if_I_receive_an_error_that_the_server_refused_our_key_.txt.metadata.json"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucketLocation",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "transcriptionbucketAC02861E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "transcribeprocessfnServiceRoleDefaultPolicy577B80D4",
    "Roles": [
     {
      "Ref": "transcribeprocessfnServiceRole14F99ED5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcribe_process_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "transcribeprocessfnCB59BDF5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "02e02c43b1f02e6f9bdf1da300379b99ce41904344ed2a06f5040227e5c4be56.zip"
    },
    "Environment": {
     "Variables": {
      "TRANSCRIPTION_BUCKET": {
       "Ref": "transcriptionbucketAC02861E"
      },
      "TRANSCRIPTION_PREFIX": "transcriptions"
     }
    },
    "Handler": "transcribe_process_fn.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "transcribeprocessfnServiceRole14F99ED5",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 45
   },
   "DependsOn": [
    "transcribeprocessfnServiceRoleDefaultPolicy577B80D4",
    "transcribeprocessfnServiceRole14F99ED5"
   ],
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/transcribe_process_fn/Resource",
    "aws:asset:path": "asset.02e02c43b1f02e6f9bdf1da300379b99ce41904344ed2a06f5040227e5c4be56",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TranscribeJobStatusRule7EDFB114": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Capture Transcribe job status changes",
    "EventPattern": {
     "detail": {
      "TranscriptionJobStatus": [
       "COMPLETED",
       "FAILED"
      ]
     },
     "detail-type": [
      "Transcribe Job State Change"
     ],
     "source": [
      "aws.transcribe"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "transcribeprocessfnCB59BDF5",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/TranscribeJobStatusRule/Resource"
   }
  },
  "TranscribeJobStatusRuleAllowEventRuleMediaIndexingStacktranscribeprocessfnA8393ED5B58B11B2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "transcribeprocessfnCB59BDF5",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "TranscribeJobStatusRule7EDFB114",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/TranscribeJobStatusRule/AllowEventRuleMediaIndexingStacktranscribeprocessfnA8393ED5"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PywrCMBBFv8V9OlIriEsVXJf6ASVNRx3bJtBJlBLy76YPqatz79x5MDtI9wfYbeSHE1U3SUsV+JuVqhGxVHrOwJ+datCKy10vakZuWlLDWl78bM6SMQiSHfjCtDh2TVyHZhVEK7uqluCvTitLRo/Zv86x74g5uiA4KyUzWobTCIFv1NH4wi0nIkMQBbJxvUIxdcVvHqQfU/4Lor4YXZOd1uaDfRq9zSBN4bh5MVHSO22pQyhmfgHnLU16JwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "MediaIndexingStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}